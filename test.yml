---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: monitoring
spec:
  replicas: 1      
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
              runAsNonRoot: true
              runAsUser: 65534
              fsGroup: 472
      containers:
        - name: grafana
          image: grafana/grafana:7.5.2
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: http
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: http
          resources:
           limits:
            cpu: 200m
            memory: 200Mi
           requests:
            cpu: 100m
            memory: 100Mi
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-pv
              # - mountPath: /var/lib/grafana
              # name: grafana-pv2  
            - mountPath: /etc/grafana/provisioning/datasources
              name: grafana-datasources
              readOnly: false
      nodeSelector:
        beta.kubernetes.io/os: linux
        # securityContext:
        #runAsNonRoot: true
        #runAsUser: 65534
      serviceAccountName: grafana
      affinity:
       nodeAffinity:
         requiredDuringSchedulingIgnoredDuringExecution:
           nodeSelectorTerms:
            - matchExpressions:
              - key: "node_group"
                operator: In
                values:
                - MONITORING-GROUP       
      volumes:
        - name: grafana-pv
          persistentVolumeClaim:
            claimName: grafana-pvc    
        - name: grafana-datasources
          secret:
           secretName: grafana-datasources 
